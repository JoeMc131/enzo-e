#
#  Grackle Test Problem:
#
#  Sets up a cooling test without hyrdodynamics to run many
#  one-zone models in Grackle, fully sampling the density,
#  temperature, and metallicity parameter space over which 
#  the chemistry and cooling/heating tables are valid.
#
#   
#

 Boundary {
     type = "reflecting";
 }

 Domain {
     lower = [ 0.0, 0.0, 0.0];
     upper = [ 1.0, 1.0, 1.0];
 }

 Units {
    density = 1.6726219E-24;  # m_H in grams... so n = 1.0 cm^-3 for pure hydrogen
    time    = 3.15576E13;     # 1 Myr in seconds
    length  = 3.086E16;       # 1 pc in cm - does not actually matter
 }

 Field {
     alignment = 8;
     gamma = 1.400;
     ghost_depth = 3;
     list = [ "density", 
              "internal_energy",
              "total_energy",
              "velocity_x",
              "velocity_y",
              "velocity_z",
              "HI_density",
              "HII_density",
              "HM_density",
              "HeI_density",
              "HeII_density",
              "HeIII_density",
              "H2I_density",
              "H2II_density",
              "DI_density",
              "DII_density",
              "HDI_density",
              "e_density",
              "metal_density",
              "cooling_time",  
              "temperature",
              "pressure",
              "gamma"
     ];

     padding = 0;
 }

 Group {
   list = ["colour"];
    colour {
       field_list = [
              "HI_density",
              "HII_density",
              "HM_density",
              "HeI_density",
              "HeII_density",
              "HeIII_density",
              "H2I_density",
              "H2II_density",
              "DI_density",
              "DII_density",
              "HDI_density",
              "e_density",
              "metal_density",
              "cooling_time",
              "temperature",
              "pressure",
              "gamma" ];
    }
 }

 Initial {
   list = ["grackle_test"];
   grackle_test {
      minimum_H_number_density = 0.0001;
      maximum_H_number_density = 1000.0;
      minimum_metallicity      = 1.0E-4;
      maximum_metallicity      = 1.0;
      minimum_temperature      = 10.0;
      maximum_temperature      = 1.0E8;

      # Keep temperature constant with changing mu?
      reset_energies           = 0;

      dt = 1.0;
   }
 }

 Mesh {
     root_blocks = [ 4, 4, 4];
     root_rank = 3;
     root_size = [ 128, 128, 128];
 }

 Method {
      list = [ "grackle"];

     grackle {
        courant = 0.40;
        data_file = "CloudyData_noUVB.h5";

        with_radiative_cooling = 1;
        primordial_chemistry   = 3;  # 1, 2, or 3
        metal_cooling          = 1;  # 0 or 1 (off/on)
        UVbackground           = 0;  # on or off
        self_shielding_method  = 0;  # 0 - 3 (0 or 3 recommended)

        HydrogenFractionByMass = 0.73;
     }

 }

 Output {
     list = ["data"];

     data {
         field_list = [ "density",
              "internal_energy",
              "total_energy",
              "velocity_x",
              "velocity_y",
              "velocity_z",
              "HI_density",
              "HII_density",
              "HM_density",
              "HeI_density",
              "HeII_density",
              "HeIII_density",
              "H2I_density",
              "H2II_density",
              "DI_density",
              "DII_density",
              "HDI_density",
              "e_density",
              "metal_density",
              "cooling_time",
              "temperature",
              "pressure",
              "gamma"
               ];

         dir   = ["GRACKLE_TEST_%03d","cycle"];
         name = [ "method_grackle-1-%03d-%03d.h5","cycle", "proc" ];
         schedule {
             var = "time";
             step = 100.0;
             start = 0.0;
         }
         type = "data";
     }

 }

 Stopping {
    time = 10.0;
 }

 Testing {
     time_final = 10.0;
 }
